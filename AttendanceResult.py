'''
Author: Hubert Wale≈Ñczak

Description:
This script is designed to generate and save a CSV file containing attendance records for each day. It operates on CSV files located in the 'Attendance' folder, with each file named after the corresponding date generated by the 'CheckAttendance.py' script. The attendance records are based on a master CSV file named 'Students.csv,' which should include students names and a column named 'student_number' with their unique identifiers.

Requirements:
- pandas
- 'Students.csv' file with students' information
- 'Attendance' folder containing CSV files named after the date

Arguments:
--name [output_file_name]
    Specify the name of the output file (without '.csv') to save the attendance records.
    Default: 'BlockAttendance'

Example Usage:
python script_name.py --name BlockA
'''
import os
import sys
import pandas as pd

folder = "Attendance"
files = sorted(os.listdir(folder))

Students = pd.read_csv('Students.csv')

Attendance = Students[['surname', 'name', 'student_number']]

for file in files:
	file_path = os.path.join(folder, file)
	df = pd.read_csv(file_path)
	variable_name = os.path.splitext(file)[0]
	Attendance[variable_name] = Attendance['student_number'].isin(df['student_number'])
	
Attendance["Total Missed"] = Attendance.apply(lambda row: row.tolist().count(False), axis=1)

def get_argument_value(arg_name):
    for i in range(1, len(sys.argv), 2):  # Start from 1 to skip the script name, step by 2 to get argument names
        if sys.argv[i] == arg_name:
            return sys.argv[i + 1]  # Return the value associated with the name
    return None  # Return None if the argument name is not found

# Example: Get the value of the command-line argument named "name"
name_value = get_argument_value("--name")

if name_value is not None:
    print("Saving as:", name_value)
else:
    print("Saving as 'BlockAttendance'")
    name_value = 'BlockAttendance'

Attendance.to_csv(name_value+'.csv', sep=',', index=False)
